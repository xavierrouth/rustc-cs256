// MIR for `main` 0 nll

| Free Region Mapping
| '?0 | Global | ['?0, '?1]
| '?1 | Local | ['?1]
|
| Inferred Region Values
| '?0 | U0 | {bb0[0..=14], bb1[0..=16], bb2[0..=7], bb3[0..=4], bb4[0..=2], bb5[0..=9], bb6[0..=4], bb7[0..=3], bb8[0..=3], bb9[0..=22], bb10[0..=7], bb11[0..=2], bb12[0..=13], bb13[0], '?0, '?1}
| '?1 | U0 | {bb0[0..=14], bb1[0..=16], bb2[0..=7], bb3[0..=4], bb4[0..=2], bb5[0..=9], bb6[0..=4], bb7[0..=3], bb8[0..=3], bb9[0..=22], bb10[0..=7], bb11[0..=2], bb12[0..=13], bb13[0], '?1}
| '?2 | U0 | {bb0[0..=14], bb1[0..=16], bb2[0..=7], bb3[0..=4], bb4[0..=2], bb5[0..=9], bb6[0..=4], bb7[0..=3], bb8[0..=3], bb9[0..=22], bb10[0..=7], bb11[0..=2], bb12[0..=13], bb13[0], '?0, '?1}
| '?3 | U0 | {bb0[0..=14], bb1[0..=16], bb2[0..=7], bb3[0..=4], bb4[0..=2], bb5[0..=9], bb6[0..=4], bb7[0..=3], bb8[0..=3], bb9[0..=22], bb10[0..=7], bb11[0..=2], bb12[0..=13], bb13[0], '?0, '?1}
| '?4 | U0 | {bb0[0..=14], bb1[0..=16], bb2[0..=7], bb3[0..=4], bb4[0..=2], bb5[0..=9], bb6[0..=4], bb7[0..=3], bb8[0..=3], bb9[0..=22], bb10[0..=7], bb11[0..=2], bb12[0..=13], bb13[0], '?0, '?1}
| '?5 | U0 | {bb9[8..=22], bb10[0..=7], bb11[0..=2]}
| '?6 | U0 | {bb9[8..=22], bb10[0..=7], bb11[0..=2]}
| '?7 | U0 | {bb0[0..=14], bb1[0..=16], bb2[0..=7], bb3[0..=4], bb4[0..=2], bb5[0..=9], bb6[0..=4], bb7[0..=3], bb8[0..=3], bb9[0..=22], bb10[0..=7], bb11[0..=2], bb12[0..=13], bb13[0], '?0, '?1}
| '?8 | U0 | {bb0[0..=14], bb1[0..=16], bb2[0..=7], bb3[0..=4], bb4[0..=2], bb5[0..=9], bb6[0..=4], bb7[0..=3], bb8[0..=3], bb9[0..=22], bb10[0..=7], bb11[0..=2], bb12[0..=13], bb13[0], '?0, '?1}
| '?9 | U0 | {bb9[8..=22], bb10[0..=7], bb11[0..=2]}
| '?10 | U0 | {bb0[0..=14], bb1[0..=16], bb2[0..=7], bb3[0..=4], bb4[0..=2], bb5[0..=9], bb6[0..=4], bb7[0..=3], bb8[0..=3], bb9[0..=22], bb10[0..=7], bb11[0..=2], bb12[0..=13], bb13[0], '?0, '?1}
| '?11 | U0 | {bb9[9..=22], bb10[0..=7], bb11[0..=2]}
| '?12 | U0 | {bb9[10..=22], bb10[0..=7], bb11[0..=2]}
| '?13 | U0 | {bb9[11..=22], bb10[0..=7], bb11[0..=2]}
| '?14 | U0 | {bb0[0..=14], bb1[0..=16], bb2[0..=7], bb3[0..=4], bb4[0..=2], bb5[0..=9], bb6[0..=4], bb7[0..=3], bb8[0..=3], bb9[0..=22], bb10[0..=7], bb11[0..=2], bb12[0..=13], bb13[0], '?0, '?1}
| '?15 | U0 | {bb9[20..=22], bb10[0..=7], bb11[0..=2]}
| '?16 | U0 | {bb9[21..=22], bb10[0..=7], bb11[0..=2]}
| '?17 | U0 | {bb9[22]}
| '?18 | U0 | {bb10[1..=7], bb11[0..=2]}
| '?19 | U0 | {bb10[3..=7], bb11[0..=2]}
| '?20 | U0 | {bb10[4..=7], bb11[0..=2]}
| '?21 | U0 | {bb10[5..=7], bb11[0..=2]}
| '?22 | U0 | {bb10[5..=7], bb11[0..=2]}
| '?23 | U0 | {bb10[7], bb11[0..=2]}
| '?24 | U0 | {bb11[0..=2]}
| '?25 | U0 | {bb9[12..=22], bb10[0..=7], bb11[0..=2]}
| '?26 | U0 | {bb0[0..=14], bb1[0..=16], bb2[0..=7], bb3[0..=4], bb4[0..=2], bb5[0..=9], bb6[0..=4], bb7[0..=3], bb8[0..=3], bb9[0..=22], bb10[0..=7], bb11[0..=2], bb12[0..=13], bb13[0], '?0, '?1}
| '?27 | U0 | {bb9[11..=22], bb10[0..=7], bb11[0..=2]}
| '?28 | U0 | {bb0[0..=14], bb1[0..=16], bb2[0..=7], bb3[0..=4], bb4[0..=2], bb5[0..=9], bb6[0..=4], bb7[0..=3], bb8[0..=3], bb9[0..=22], bb10[0..=7], bb11[0..=2], bb12[0..=13], bb13[0], '?0, '?1}
| '?29 | U0 | {bb9[10..=22], bb10[0..=7], bb11[0..=2]}
| '?30 | U0 | {bb0[0..=14], bb1[0..=16], bb2[0..=7], bb3[0..=4], bb4[0..=2], bb5[0..=9], bb6[0..=4], bb7[0..=3], bb8[0..=3], bb9[0..=22], bb10[0..=7], bb11[0..=2], bb12[0..=13], bb13[0], '?0, '?1}
| '?31 | U0 | {}
| '?32 | U0 | {bb10[6..=7], bb11[0..=2]}
| '?33 | U0 | {bb10[6..=7], bb11[0..=2]}
| '?34 | U0 | {bb10[5..=7], bb11[0..=2]}
| '?35 | U0 | {bb10[5..=7], bb11[0..=2]}
| '?36 | U0 | {bb10[4..=7], bb11[0..=2]}
| '?37 | U0 | {bb10[4..=7], bb11[0..=2]}
| '?38 | U0 | {bb10[2..=7], bb11[0..=2]}
| '?39 | U0 | {bb10[0..=7], bb11[0..=2]}
| '?40 | U0 | {bb9[22], bb10[0..=7], bb11[0..=2]}
| '?41 | U0 | {bb9[21..=22], bb10[0..=7], bb11[0..=2]}
| '?42 | U0 | {bb9[9..=22], bb10[0..=7], bb11[0..=2]}
| '?43 | U0 | {bb0[0..=14], bb1[0..=16], bb2[0..=7], bb3[0..=4], bb4[0..=2], bb5[0..=9], bb6[0..=4], bb7[0..=3], bb8[0..=3], bb9[0..=22], bb10[0..=7], bb11[0..=2], bb12[0..=13], bb13[0], '?0, '?1}
| '?44 | U0 | {bb10[7], bb11[0..=2]}
| '?45 | U0 | {bb9[22]}
| '?46 | U0 | {bb10[7], bb11[0..=2]}
| '?47 | U0 | {bb10[7], bb11[0..=2]}
| '?48 | U0 | {bb9[22]}
| '?49 | U0 | {bb9[22]}
| '?50 | U0 | {bb9[22], bb10[0..=7], bb11[0..=2]}
| '?51 | U0 | {bb11[2]}
|
| Inference Constraints
| '?0 live at {bb0[0..=14], bb1[0..=16], bb2[0..=7], bb3[0..=4], bb4[0..=2], bb5[0..=9], bb6[0..=4], bb7[0..=3], bb8[0..=3], bb9[0..=22], bb10[0..=7], bb11[0..=2], bb12[0..=13], bb13[0]}
| '?1 live at {bb0[0..=14], bb1[0..=16], bb2[0..=7], bb3[0..=4], bb4[0..=2], bb5[0..=9], bb6[0..=4], bb7[0..=3], bb8[0..=3], bb9[0..=22], bb10[0..=7], bb11[0..=2], bb12[0..=13], bb13[0]}
| '?3 live at {bb9[8]}
| '?4 live at {bb9[8]}
| '?9 live at {bb9[8]}
| '?10 live at {bb9[8]}
| '?11 live at {bb9[9]}
| '?12 live at {bb9[10]}
| '?13 live at {bb9[11]}
| '?14 live at {bb9[11]}
| '?15 live at {bb9[20]}
| '?16 live at {bb9[21]}
| '?17 live at {bb9[22]}
| '?18 live at {bb10[1]}
| '?19 live at {bb10[3]}
| '?20 live at {bb10[4]}
| '?21 live at {bb10[5]}
| '?22 live at {bb10[5]}
| '?23 live at {bb10[7]}
| '?24 live at {bb11[0..=2]}
| '?25 live at {bb9[12..=22], bb10[0..=7]}
| '?26 live at {bb9[12..=22], bb10[0..=7]}
| '?27 live at {bb9[11]}
| '?28 live at {bb9[11]}
| '?29 live at {bb9[10]}
| '?30 live at {bb9[10]}
| '?32 live at {bb10[6..=7]}
| '?33 live at {bb10[6..=7]}
| '?34 live at {bb10[5]}
| '?35 live at {bb10[5]}
| '?36 live at {bb10[4]}
| '?37 live at {bb10[4]}
| '?38 live at {bb10[2..=3]}
| '?39 live at {bb10[0..=1]}
| '?40 live at {bb9[22]}
| '?41 live at {bb9[21]}
| '?42 live at {bb9[9]}
| '?43 live at {bb9[9]}
| '?50 live at {bb9[22]}
| '?51 live at {bb11[2]}
| '?0: '?23 due to BoringNoLocation at Single(bb10[7]) (/rustc/FAKE_PREFIX/library/std/src/macros.rs:143:28: 143:61 (#5)
| '?2: '?8 due to Boring at Single(bb9[8]) (/home/isquared/rust/tests/ui/pre/pre-test-1.rs:17:14: 17:18 (#0)
| '?3: '?2 due to Boring at Single(bb9[8]) (/home/isquared/rust/tests/ui/pre/pre-test-1.rs:17:14: 17:18 (#0)
| '?4: '?2 due to Boring at Single(bb9[8]) (/home/isquared/rust/tests/ui/pre/pre-test-1.rs:17:14: 17:18 (#0)
| '?5: '?6 due to Boring at Single(bb9[8]) (/home/isquared/rust/tests/ui/pre/pre-test-1.rs:17:14: 17:18 (#0)
| '?6: '?9 due to Boring at Single(bb9[8]) (/home/isquared/rust/tests/ui/pre/pre-test-1.rs:17:14: 17:18 (#0)
| '?7: '?10 due to Boring at Single(bb9[8]) (/home/isquared/rust/tests/ui/pre/pre-test-1.rs:17:14: 17:18 (#0)
| '?8: '?7 due to Boring at Single(bb9[8]) (/home/isquared/rust/tests/ui/pre/pre-test-1.rs:17:14: 17:18 (#0)
| '?9: '?6 due to Boring at Single(bb9[8]) (/home/isquared/rust/tests/ui/pre/pre-test-1.rs:17:14: 17:18 (#0)
| '?9: '?42 due to Boring at Single(bb9[8]) (/home/isquared/rust/tests/ui/pre/pre-test-1.rs:17:14: 17:18 (#0)
| '?10: '?7 due to Boring at Single(bb9[8]) (/home/isquared/rust/tests/ui/pre/pre-test-1.rs:17:14: 17:18 (#0)
| '?10: '?43 due to Boring at Single(bb9[8]) (/home/isquared/rust/tests/ui/pre/pre-test-1.rs:17:14: 17:18 (#0)
| '?11: '?29 due to Boring at Single(bb9[9]) (/home/isquared/rust/tests/ui/pre/pre-test-1.rs:17:14: 17:18 (#0)
| '?12: '?27 due to Boring at Single(bb9[10]) (/home/isquared/rust/tests/ui/pre/pre-test-1.rs:17:14: 17:18 (#0)
| '?13: '?25 due to Boring at Single(bb9[11]) (/home/isquared/rust/tests/ui/pre/pre-test-1.rs:17:14: 17:18 (#0)
| '?14: '?26 due to Boring at Single(bb9[11]) (/home/isquared/rust/tests/ui/pre/pre-test-1.rs:17:14: 17:18 (#0)
| '?14: '?28 due to Cast { unsize_to: Some(&ReErased [&ReErased str]) } at Single(bb9[11]) (/home/isquared/rust/tests/ui/pre/pre-test-1.rs:17:14: 17:18 (#0)
| '?15: '?41 due to Boring at Single(bb9[20]) (/home/isquared/rust/tests/ui/pre/pre-test-1.rs:17:20: 17:21 (#5)
| '?16: '?40 due to Boring at Single(bb9[21]) (/home/isquared/rust/tests/ui/pre/pre-test-1.rs:17:20: 17:21 (#5)
| '?17: '?45 due to Boring at Single(bb9[22]) (/home/isquared/rust/tests/ui/pre/pre-test-1.rs:17:15: 17:17 (#5)
| '?18: '?38 due to Boring at Single(bb10[1]) (/rustc/FAKE_PREFIX/library/std/src/macros.rs:143:28: 143:61 (#5)
| '?19: '?36 due to Boring at Single(bb10[3]) (/rustc/FAKE_PREFIX/library/std/src/macros.rs:143:28: 143:61 (#5)
| '?20: '?34 due to Boring at Single(bb10[4]) (/rustc/FAKE_PREFIX/library/std/src/macros.rs:143:28: 143:61 (#5)
| '?21: '?32 due to Boring at Single(bb10[5]) (/rustc/FAKE_PREFIX/library/std/src/macros.rs:143:28: 143:61 (#5)
| '?22: '?33 due to Boring at Single(bb10[5]) (/rustc/FAKE_PREFIX/library/std/src/macros.rs:143:28: 143:61 (#5)
| '?22: '?35 due to Cast { unsize_to: Some(&ReErased [core::fmt::rt::Argument<ReErased>]) } at Single(bb10[5]) (/rustc/FAKE_PREFIX/library/std/src/macros.rs:143:28: 143:61 (#5)
| '?23: '?24 due to Boring at Single(bb10[7]) (/rustc/FAKE_PREFIX/library/std/src/macros.rs:143:28: 143:61 (#5)
| '?23: '?44 due to Boring at Single(bb10[7]) (/rustc/FAKE_PREFIX/library/std/src/macros.rs:143:28: 143:61 (#5)
| '?24: '?51 due to CallArgument(Some(FnDef(DefId(1:3402 ~ std[167b]::io::stdio::_print), []))) at Single(bb11[2]) (/rustc/FAKE_PREFIX/library/std/src/macros.rs:143:9: 143:62 (#4)
| '?25: '?23 due to CallArgument(Some(FnDef(DefId(2:9984 ~ core[e3d0]::fmt::{impl#2}::new_v1), [ReErased]))) at Single(bb10[7]) (/rustc/FAKE_PREFIX/library/std/src/macros.rs:143:28: 143:61 (#5)
| '?26: '?0 due to CallArgument(Some(FnDef(DefId(2:9984 ~ core[e3d0]::fmt::{impl#2}::new_v1), [ReErased]))) at Single(bb10[7]) (/rustc/FAKE_PREFIX/library/std/src/macros.rs:143:28: 143:61 (#5)
| '?27: '?13 due to Cast { unsize_to: Some(&ReErased [&ReErased str]) } at Single(bb9[11]) (/home/isquared/rust/tests/ui/pre/pre-test-1.rs:17:14: 17:18 (#0)
| '?28: '?14 due to Cast { unsize_to: Some(&ReErased [&ReErased str]) } at Single(bb9[11]) (/home/isquared/rust/tests/ui/pre/pre-test-1.rs:17:14: 17:18 (#0)
| '?29: '?12 due to Boring at Single(bb9[10]) (/home/isquared/rust/tests/ui/pre/pre-test-1.rs:17:14: 17:18 (#0)
| '?30: '?28 due to Boring at Single(bb9[10]) (/home/isquared/rust/tests/ui/pre/pre-test-1.rs:17:14: 17:18 (#0)
| '?32: '?23 due to CallArgument(Some(FnDef(DefId(2:9984 ~ core[e3d0]::fmt::{impl#2}::new_v1), [ReErased]))) at Single(bb10[7]) (/rustc/FAKE_PREFIX/library/std/src/macros.rs:143:28: 143:61 (#5)
| '?33: '?23 due to CallArgument(Some(FnDef(DefId(2:9984 ~ core[e3d0]::fmt::{impl#2}::new_v1), [ReErased]))) at Single(bb10[7]) (/rustc/FAKE_PREFIX/library/std/src/macros.rs:143:28: 143:61 (#5)
| '?34: '?21 due to Cast { unsize_to: Some(&ReErased [core::fmt::rt::Argument<ReErased>]) } at Single(bb10[5]) (/rustc/FAKE_PREFIX/library/std/src/macros.rs:143:28: 143:61 (#5)
| '?35: '?22 due to Cast { unsize_to: Some(&ReErased [core::fmt::rt::Argument<ReErased>]) } at Single(bb10[5]) (/rustc/FAKE_PREFIX/library/std/src/macros.rs:143:28: 143:61 (#5)
| '?36: '?20 due to Boring at Single(bb10[4]) (/rustc/FAKE_PREFIX/library/std/src/macros.rs:143:28: 143:61 (#5)
| '?37: '?35 due to Boring at Single(bb10[4]) (/rustc/FAKE_PREFIX/library/std/src/macros.rs:143:28: 143:61 (#5)
| '?38: '?37 due to Boring at Single(bb10[3]) (/rustc/FAKE_PREFIX/library/std/src/macros.rs:143:28: 143:61 (#5)
| '?39: '?18 due to Boring at Single(bb10[1]) (/rustc/FAKE_PREFIX/library/std/src/macros.rs:143:28: 143:61 (#5)
| '?40: '?50 due to CallArgument(Some(FnDef(DefId(2:9904 ~ core[e3d0]::fmt::rt::{impl#1}::new_display), [ReErased, i32]))) at Single(bb9[22]) (/home/isquared/rust/tests/ui/pre/pre-test-1.rs:17:15: 17:17 (#5)
| '?41: '?16 due to Boring at Single(bb9[21]) (/home/isquared/rust/tests/ui/pre/pre-test-1.rs:17:20: 17:21 (#5)
| '?42: '?11 due to Boring at Single(bb9[9]) (/home/isquared/rust/tests/ui/pre/pre-test-1.rs:17:14: 17:18 (#0)
| '?43: '?30 due to Boring at Single(bb9[9]) (/home/isquared/rust/tests/ui/pre/pre-test-1.rs:17:14: 17:18 (#0)
| '?44: '?23 due to Boring at Single(bb10[7]) (/rustc/FAKE_PREFIX/library/std/src/macros.rs:143:28: 143:61 (#5)
| '?44: '?47 due to BoringNoLocation at All(/rustc/FAKE_PREFIX/library/std/src/macros.rs:143:28: 143:61) (/rustc/FAKE_PREFIX/library/std/src/macros.rs:143:28: 143:61 (#5)
| '?45: '?17 due to Boring at Single(bb9[22]) (/home/isquared/rust/tests/ui/pre/pre-test-1.rs:17:15: 17:17 (#5)
| '?45: '?49 due to BoringNoLocation at All(/home/isquared/rust/tests/ui/pre/pre-test-1.rs:17:15: 17:17) (/home/isquared/rust/tests/ui/pre/pre-test-1.rs:17:15: 17:17 (#5)
| '?46: '?47 due to BoringNoLocation at All(/rustc/FAKE_PREFIX/library/std/src/macros.rs:143:28: 143:61) (/rustc/FAKE_PREFIX/library/std/src/macros.rs:143:28: 143:61 (#5)
| '?47: '?44 due to BoringNoLocation at All(/rustc/FAKE_PREFIX/library/std/src/macros.rs:143:28: 143:61) (/rustc/FAKE_PREFIX/library/std/src/macros.rs:143:28: 143:61 (#5)
| '?47: '?46 due to BoringNoLocation at All(/rustc/FAKE_PREFIX/library/std/src/macros.rs:143:28: 143:61) (/rustc/FAKE_PREFIX/library/std/src/macros.rs:143:28: 143:61 (#5)
| '?48: '?49 due to BoringNoLocation at All(/home/isquared/rust/tests/ui/pre/pre-test-1.rs:17:15: 17:17) (/home/isquared/rust/tests/ui/pre/pre-test-1.rs:17:15: 17:17 (#5)
| '?49: '?45 due to BoringNoLocation at All(/home/isquared/rust/tests/ui/pre/pre-test-1.rs:17:15: 17:17) (/home/isquared/rust/tests/ui/pre/pre-test-1.rs:17:15: 17:17 (#5)
| '?49: '?48 due to BoringNoLocation at All(/home/isquared/rust/tests/ui/pre/pre-test-1.rs:17:15: 17:17) (/home/isquared/rust/tests/ui/pre/pre-test-1.rs:17:15: 17:17 (#5)
| '?50: '?39 due to Boring at Single(bb9[22]) (/home/isquared/rust/tests/ui/pre/pre-test-1.rs:17:15: 17:17 (#5)
|
| User Type Annotations
| 0: user_ty: Canonical { value: Ty(i32), max_universe: U0, variables: [] }, span: /home/isquared/rust/tests/ui/pre/pre-test-1.rs:5:16: 5:19, inferred_ty: i32
| 1: user_ty: Canonical { value: Ty(i32), max_universe: U0, variables: [] }, span: /home/isquared/rust/tests/ui/pre/pre-test-1.rs:5:16: 5:19, inferred_ty: i32
| 2: user_ty: Canonical { value: Ty(i32), max_universe: U0, variables: [] }, span: /home/isquared/rust/tests/ui/pre/pre-test-1.rs:6:16: 6:19, inferred_ty: i32
| 3: user_ty: Canonical { value: Ty(i32), max_universe: U0, variables: [] }, span: /home/isquared/rust/tests/ui/pre/pre-test-1.rs:6:16: 6:19, inferred_ty: i32
| 4: user_ty: Canonical { value: Ty(i32), max_universe: U0, variables: [] }, span: /home/isquared/rust/tests/ui/pre/pre-test-1.rs:7:16: 7:19, inferred_ty: i32
| 5: user_ty: Canonical { value: Ty(i32), max_universe: U0, variables: [] }, span: /home/isquared/rust/tests/ui/pre/pre-test-1.rs:7:16: 7:19, inferred_ty: i32
| 6: user_ty: Canonical { value: Ty(i32), max_universe: U0, variables: [] }, span: /home/isquared/rust/tests/ui/pre/pre-test-1.rs:8:16: 8:19, inferred_ty: i32
| 7: user_ty: Canonical { value: Ty(i32), max_universe: U0, variables: [] }, span: /home/isquared/rust/tests/ui/pre/pre-test-1.rs:8:16: 8:19, inferred_ty: i32
| 8: user_ty: Canonical { value: TypeOf(DefId(2:9984 ~ core[e3d0]::fmt::{impl#2}::new_v1), UserArgs { args: [ReBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon })], user_self_ty: Some(UserSelfTy { impl_def_id: DefId(2:9981 ~ core[e3d0]::fmt::{impl#2}), self_ty: std::fmt::Arguments<ReBound(DebruijnIndex(0), BoundRegion { var: 1, kind: BrAnon })> }) }), max_universe: U0, variables: [CanonicalVarInfo { kind: Region(U0) }, CanonicalVarInfo { kind: Region(U0) }] }, span: /rustc/FAKE_PREFIX/library/std/src/macros.rs:143:28: 143:61, inferred_ty: fn(&[&'static str], &[core::fmt::rt::Argument<'_>]) -> std::fmt::Arguments<'_> {std::fmt::Arguments::<'_>::new_v1}
| 9: user_ty: Canonical { value: TypeOf(DefId(2:9904 ~ core[e3d0]::fmt::rt::{impl#1}::new_display), UserArgs { args: [ReBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon }), ^1], user_self_ty: Some(UserSelfTy { impl_def_id: DefId(2:9899 ~ core[e3d0]::fmt::rt::{impl#1}), self_ty: core::fmt::rt::Argument<ReBound(DebruijnIndex(0), BoundRegion { var: 2, kind: BrAnon })> }) }), max_universe: U0, variables: [CanonicalVarInfo { kind: Region(U0) }, CanonicalVarInfo { kind: Ty(General(U0)) }, CanonicalVarInfo { kind: Region(U0) }] }, span: /home/isquared/rust/tests/ui/pre/pre-test-1.rs:17:15: 17:17, inferred_ty: for<'b> fn(&'b i32) -> core::fmt::rt::Argument<'b> {core::fmt::rt::Argument::<'_>::new_display::<i32>}
|
fn main() -> () {
    let mut _0: ();
    let mut _1: i32 as UserTypeProjection { base: UserType(0), projs: [] };
    let mut _4: i32;
    let mut _5: i32;
    let mut _6: (i32, bool);
    let _8: ();
    let mut _9: bool;
    let mut _10: i32;
    let mut _11: i32;
    let mut _12: i32;
    let mut _13: i32;
    let mut _14: (i32, bool);
    let mut _15: (i32, bool);
    let mut _16: i32;
    let mut _17: i32;
    let mut _18: i32;
    let mut _19: i32;
    let mut _20: (i32, bool);
    let mut _21: bool;
    let mut _22: (i32, bool);
    let _23: ();
    let _24: ();
    let mut _25: std::fmt::Arguments<'_>;
    let mut _26: &[&str];
    let mut _27: &[&str; 2];
    let _28: &[&str; 2];
    let _29: [&str; 2];
    let mut _30: &[core::fmt::rt::Argument<'_>];
    let mut _31: &[core::fmt::rt::Argument<'_>; 1];
    let _32: &[core::fmt::rt::Argument<'_>; 1];
    let _33: [core::fmt::rt::Argument<'_>; 1];
    let mut _34: core::fmt::rt::Argument<'_>;
    let mut _35: &i32;
    let _36: &i32;
    scope 1 {
        debug x => _1;
        let mut _2: i32 as UserTypeProjection { base: UserType(2), projs: [] };
        scope 2 {
            debug y => _2;
            let mut _3: i32 as UserTypeProjection { base: UserType(4), projs: [] };
            scope 3 {
                debug t => _3;
                let mut _7: i32 as UserTypeProjection { base: UserType(6), projs: [] };
                scope 4 {
                    debug f => _7;
                    let mut _37: &[&str; 2];
                }
            }
        }
    }

    bb0: {
        StorageLive(_1);
        _1 = const 0_i32;
        FakeRead(ForLet(None), _1);
        AscribeUserType(_1, o, UserTypeProjection { base: UserType(1), projs: [] });
        StorageLive(_2);
        _2 = const 0_i32;
        FakeRead(ForLet(None), _2);
        AscribeUserType(_2, o, UserTypeProjection { base: UserType(3), projs: [] });
        StorageLive(_3);
        StorageLive(_4);
        _4 = _1;
        StorageLive(_5);
        _5 = _2;
        _6 = CheckedAdd(_4, _5);
        assert(!move (_6.1: bool), "attempt to compute `{} + {}`, which would overflow", move _4, move _5) -> [success: bb1, unwind: bb13];
    }

    bb1: {
        _3 = move (_6.0: i32);
        StorageDead(_5);
        StorageDead(_4);
        FakeRead(ForLet(None), _3);
        AscribeUserType(_3, o, UserTypeProjection { base: UserType(5), projs: [] });
        StorageLive(_7);
        _7 = _3;
        FakeRead(ForLet(None), _7);
        AscribeUserType(_7, o, UserTypeProjection { base: UserType(7), projs: [] });
        StorageLive(_8);
        StorageLive(_9);
        StorageLive(_10);
        _10 = _1;
        StorageLive(_11);
        _11 = _2;
        _9 = Ge(move _10, move _11);
        switchInt(move _9) -> [0: bb5, otherwise: bb2];
    }

    bb2: {
        StorageDead(_11);
        StorageDead(_10);
        StorageLive(_12);
        _12 = _1;
        StorageLive(_13);
        _13 = _2;
        _14 = CheckedAdd(_12, _13);
        assert(!move (_14.1: bool), "attempt to compute `{} + {}`, which would overflow", move _12, move _13) -> [success: bb3, unwind: bb13];
    }

    bb3: {
        _7 = move (_14.0: i32);
        StorageDead(_13);
        StorageDead(_12);
        _15 = CheckedMul(_7, const 2_i32);
        assert(!move (_15.1: bool), "attempt to compute `{} * {}`, which would overflow", _7, const 2_i32) -> [success: bb4, unwind: bb13];
    }

    bb4: {
        _7 = move (_15.0: i32);
        _8 = const ();
        goto -> bb9;
    }

    bb5: {
        StorageDead(_11);
        StorageDead(_10);
        StorageLive(_16);
        StorageLive(_17);
        StorageLive(_18);
        _18 = _1;
        StorageLive(_19);
        _19 = _2;
        _20 = CheckedAdd(_18, _19);
        assert(!move (_20.1: bool), "attempt to compute `{} + {}`, which would overflow", move _18, move _19) -> [success: bb6, unwind: bb13];
    }

    bb6: {
        _17 = move (_20.0: i32);
        StorageDead(_19);
        StorageDead(_18);
        _21 = Eq(_17, const i32::MIN);
        assert(!move _21, "attempt to negate `{}`, which would overflow", _17) -> [success: bb7, unwind: bb13];
    }

    bb7: {
        _16 = Neg(move _17);
        StorageDead(_17);
        _22 = CheckedAdd(_16, const 2_i32);
        assert(!move (_22.1: bool), "attempt to compute `{} + {}`, which would overflow", move _16, const 2_i32) -> [success: bb8, unwind: bb13];
    }

    bb8: {
        _7 = move (_22.0: i32);
        StorageDead(_16);
        _8 = const ();
        goto -> bb9;
    }

    bb9: {
        StorageDead(_9);
        StorageDead(_8);
        StorageLive(_23);
        StorageLive(_24);
        StorageLive(_25);
        StorageLive(_26);
        StorageLive(_27);
        StorageLive(_28);
        _37 = const _;
        _28 = &(*_37);
        _27 = &(*_28);
        _26 = move _27 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_27);
        StorageLive(_30);
        StorageLive(_31);
        StorageLive(_32);
        StorageLive(_33);
        StorageLive(_34);
        StorageLive(_35);
        StorageLive(_36);
        _36 = &_7;
        _35 = &(*_36);
        _34 = core::fmt::rt::Argument::<'_>::new_display::<i32>(move _35) -> [return: bb10, unwind: bb13];
    }

    bb10: {
        StorageDead(_35);
        _33 = [move _34];
        StorageDead(_34);
        _32 = &_33;
        _31 = &(*_32);
        _30 = move _31 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_31);
        _25 = Arguments::<'_>::new_v1(move _26, move _30) -> [return: bb11, unwind: bb13];
    }

    bb11: {
        StorageDead(_30);
        StorageDead(_26);
        _24 = _print(move _25) -> [return: bb12, unwind: bb13];
    }

    bb12: {
        StorageDead(_25);
        StorageDead(_36);
        StorageDead(_33);
        StorageDead(_32);
        StorageDead(_28);
        StorageDead(_24);
        _23 = const ();
        StorageDead(_23);
        _0 = const ();
        StorageDead(_7);
        StorageDead(_3);
        StorageDead(_2);
        StorageDead(_1);
        return;
    }

    bb13 (cleanup): {
        resume;
    }
}
