// MIR for `simple` after PartialRedundancyElimination

fn simple(_1: i32) -> i32 {
    let mut _0: i32;
    let mut _2: i32;
    let mut _3: i32;
    let mut _4: i32;
    let mut _5: i32;
    let mut _6: i32;
    let mut _7: bool;
    let mut _8: i32;

    bb0: {
        _2 = const 3_i32;
        _3 = const 5_i32;
        _4 = const 10_i32;
        _5 = const 20_i32;
        _6 = const 5_i32;
        _6 = const 6_i32;
        goto -> bb4;
    }

    bb1: {
        _7 = Lt(_6, const 20_i32);
        switchInt(_7) -> [1: bb2, otherwise: bb3];
    }

    bb2: {
        _6 = Add(_6, const 1_i32);
        _4 = _8;
        goto -> bb5;
    }

    bb3: {
        _4 = _8;
        _0 = const 10_i32;
        return;
    }

    bb4: {
        _8 = Add(_2, _3);
        goto -> bb1;
    }

    bb5: {
        goto -> bb1;
    }
}
