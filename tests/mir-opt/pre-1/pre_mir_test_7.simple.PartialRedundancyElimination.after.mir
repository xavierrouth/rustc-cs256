// MIR for `simple` after PartialRedundancyElimination

fn simple(_1: i32) -> i32 {
    let mut _0: i32;
    let mut _2: i32;
    let mut _3: bool;
    let mut _4: bool;
    let mut _5: i32;
    let mut _6: i32;
    let mut _7: i32;

    bb0: {
        _2 = const 1_i32;
        _3 = const true;
        _4 = const false;
        switchInt(_3) -> [1: bb4, otherwise: bb2];
    }

    bb1: {
        switchInt(_4) -> [1: bb6, otherwise: bb5];
    }

    bb2: {
        _7 = Add(_2, _1);
        _5 = _7;
        goto -> bb7;
    }

    bb3: {
        _6 = _7;
        _0 = const 19_i32;
        return;
    }

    bb4: {
        goto -> bb1;
    }

    bb5: {
        goto -> bb1;
    }

    bb6: {
        _7 = Add(_2, _1);
        goto -> bb3;
    }

    bb7: {
        goto -> bb3;
    }
}
