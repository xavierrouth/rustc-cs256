digraph Mir_0_3 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn aaa(_1: i32) -&gt; ()<br align="left"/>let mut _2: i32;<br align="left"/>let mut _3: i32;<br align="left"/>let mut _4: i32;<br align="left"/>let mut _5: i32;<br align="left"/>let mut _6: bool;<br align="left"/>let mut _7: i32;<br align="left"/>let mut _8: i32;<br align="left"/>let mut _9: i32;<br align="left"/>let mut _10: i32;<br align="left"/>let mut _11: (i32, bool);<br align="left"/>let mut _12: (i32, bool);<br align="left"/>let mut _13: i32;<br align="left"/>let mut _14: i32;<br align="left"/>let mut _15: i32;<br align="left"/>let mut _16: i32;<br align="left"/>let mut _17: (i32, bool);<br align="left"/>let mut _18: bool;<br align="left"/>let mut _19: (i32, bool);<br align="left"/>let mut _20: i32;<br align="left"/>let mut _21: i32;<br align="left"/>let mut _22: (i32, bool);<br align="left"/>let _23: ();<br align="left"/>let mut _24: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _25: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _26: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _27: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _28: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _29: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _30: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _31: &amp;ReErased i32;<br align="left"/>let _32: ();<br align="left"/>let mut _33: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _34: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _35: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _36: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _37: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _38: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _39: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _40: &amp;ReErased i32;<br align="left"/>let mut _41: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _42: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>debug a =&gt; _1;<br align="left"/>debug x =&gt; const 0_i32;<br align="left"/>debug y =&gt; const 0_i32;<br align="left"/>debug t =&gt; _4;<br align="left"/>debug f =&gt; _5;<br align="left"/>>;
    bb0__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_2 = const 0_i32<br/>_3 = const 0_i32<br/>_4 = const 0_i32<br/>_5 = _4<br/>_6 = Ge(_2, _3)<br/></td></tr><tr><td align="left">switchInt(move _6)</td></tr></table>>];
    bb1__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">_11 = CheckedAdd(_2, _3)<br/></td></tr><tr><td align="left">assert(!move (_11.1: bool), &quot;attempt to compute `{} + {}`, which would overflow&quot;, _2, _3)</td></tr></table>>];
    bb2__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">_5 = move (_11.0: i32)<br/>_12 = CheckedMul(_5, const 2_i32)<br/></td></tr><tr><td align="left">assert(!move (_12.1: bool), &quot;attempt to compute `{} * {}`, which would overflow&quot;, _5, const 2_i32)</td></tr></table>>];
    bb3__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">_5 = move (_12.0: i32)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb4__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">_17 = CheckedAdd(_2, _3)<br/></td></tr><tr><td align="left">assert(!move (_17.1: bool), &quot;attempt to compute `{} + {}`, which would overflow&quot;, _2, _3)</td></tr></table>>];
    bb5__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">_14 = move (_17.0: i32)<br/>_18 = Eq(_14, const i32::MIN)<br/></td></tr><tr><td align="left">assert(!move _18, &quot;attempt to negate `{}`, which would overflow&quot;, _14)</td></tr></table>>];
    bb6__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">_13 = Neg(move _14)<br/>_19 = CheckedAdd(_13, const 2_i32)<br/></td></tr><tr><td align="left">assert(!move (_19.1: bool), &quot;attempt to compute `{} + {}`, which would overflow&quot;, move _13, const 2_i32)</td></tr></table>>];
    bb7__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">_5 = move (_19.0: i32)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">_22 = CheckedAdd(_2, _3)<br/></td></tr><tr><td align="left">assert(!move (_22.1: bool), &quot;attempt to compute `{} + {}`, which would overflow&quot;, _2, _3)</td></tr></table>>];
    bb9__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">_4 = move (_22.0: i32)<br/>_42 = const _<br/>_25 = _42 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>_31 = &amp;_5<br/></td></tr><tr><td align="left">_30 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;i32&gt;(move _31)</td></tr></table>>];
    bb10__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">_29 = [move _30]<br/>_28 = &amp;_29<br/>_27 = move _28 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/></td></tr><tr><td align="left">_24 = Arguments::&lt;'_&gt;::new_v1(move _25, move _27)</td></tr></table>>];
    bb11__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left">_23 = _print(move _24)</td></tr></table>>];
    bb12__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">_41 = const _<br/>_34 = _41 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>_40 = &amp;_4<br/></td></tr><tr><td align="left">_39 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;i32&gt;(move _40)</td></tr></table>>];
    bb13__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">_38 = [move _39]<br/>_37 = &amp;_38<br/>_36 = move _37 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/></td></tr><tr><td align="left">_33 = Arguments::&lt;'_&gt;::new_v1(move _34, move _36)</td></tr></table>>];
    bb14__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left">_32 = _print(move _33)</td></tr></table>>];
    bb15__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_3 -> bb4__0_3 [label="0"];
    bb0__0_3 -> bb1__0_3 [label="otherwise"];
    bb1__0_3 -> bb2__0_3 [label="success"];
    bb2__0_3 -> bb3__0_3 [label="success"];
    bb3__0_3 -> bb8__0_3 [label=""];
    bb4__0_3 -> bb5__0_3 [label="success"];
    bb5__0_3 -> bb6__0_3 [label="success"];
    bb6__0_3 -> bb7__0_3 [label="success"];
    bb7__0_3 -> bb8__0_3 [label=""];
    bb8__0_3 -> bb9__0_3 [label="success"];
    bb9__0_3 -> bb10__0_3 [label="return"];
    bb10__0_3 -> bb11__0_3 [label="return"];
    bb11__0_3 -> bb12__0_3 [label="return"];
    bb12__0_3 -> bb13__0_3 [label="return"];
    bb13__0_3 -> bb14__0_3 [label="return"];
    bb14__0_3 -> bb15__0_3 [label="return"];
}
