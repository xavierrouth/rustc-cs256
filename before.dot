digraph Mir_0_3 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn simple(_1: T/#0) -&gt; ()<br align="left"/>let mut _2: i32;<br align="left"/>let mut _3: i32;<br align="left"/>let mut _4: i32;<br align="left"/>let mut _5: i32;<br align="left"/>let mut _6: i32;<br align="left"/>let _7: ();<br align="left"/>let mut _8: ();<br align="left"/>let mut _9: bool;<br align="left"/>let mut _10: i32;<br align="left"/>let mut _11: i32;<br align="left"/>let _12: ();<br align="left"/>let mut _13: bool;<br align="left"/>let mut _14: i32;<br align="left"/>let mut _15: i32;<br align="left"/>let mut _16: i32;<br align="left"/>let mut _17: (i32, bool);<br align="left"/>let mut _18: i32;<br align="left"/>let mut _19: i32;<br align="left"/>let mut _20: i32;<br align="left"/>let mut _21: (i32, bool);<br align="left"/>let mut _22: i32;<br align="left"/>let mut _23: i32;<br align="left"/>let mut _24: (i32, bool);<br align="left"/>let mut _25: i32;<br align="left"/>let mut _26: i32;<br align="left"/>let mut _27: (i32, bool);<br align="left"/>let mut _28: i32;<br align="left"/>let mut _29: i32;<br align="left"/>let mut _30: (i32, bool);<br align="left"/>let mut _31: i32;<br align="left"/>let mut _32: i32;<br align="left"/>let mut _33: (i32, bool);<br align="left"/>let _34: ();<br align="left"/>let mut _35: bool;<br align="left"/>let mut _36: i32;<br align="left"/>let mut _37: i32;<br align="left"/>let mut _38: i32;<br align="left"/>let mut _39: i32;<br align="left"/>let mut _40: i32;<br align="left"/>let mut _41: (i32, bool);<br align="left"/>let mut _42: (i32, bool);<br align="left"/>let mut _43: i32;<br align="left"/>let mut _44: i32;<br align="left"/>let mut _45: i32;<br align="left"/>let mut _46: (i32, bool);<br align="left"/>let mut _47: (i32, bool);<br align="left"/>let mut _48: (i32, bool);<br align="left"/>let mut _49: !;<br align="left"/>let _50: ();<br align="left"/>let mut _51: !;<br align="left"/>let _52: ();<br align="left"/>let _53: ();<br align="left"/>let mut _54: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _55: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _56: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _57: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _58: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _59: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _60: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _61: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _62: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _63: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _64: &amp;ReErased i32;<br align="left"/>let _65: &amp;ReErased i32;<br align="left"/>let _66: ();<br align="left"/>let _67: ();<br align="left"/>let mut _68: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _69: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _70: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _71: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _72: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _73: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _74: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _75: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _76: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _77: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _78: &amp;ReErased i32;<br align="left"/>let _79: &amp;ReErased i32;<br align="left"/>let mut _80: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _81: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>debug _z =&gt; _1;<br align="left"/>debug x =&gt; _2;<br align="left"/>debug y =&gt; _3;<br align="left"/>debug a =&gt; _4;<br align="left"/>debug b =&gt; _5;<br align="left"/>debug i =&gt; _6;<br align="left"/>>;
    bb0__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>_2 = const 3_i32<br/>StorageLive(_3)<br/>_3 = const 5_i32<br/>StorageLive(_4)<br/>_4 = const 10_i32<br/>StorageLive(_5)<br/>_5 = const 20_i32<br/>StorageLive(_6)<br/>_6 = const 0_i32<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb1__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageLive(_9)<br/>StorageLive(_10)<br/>_10 = _6<br/>StorageLive(_11)<br/>_11 = _4<br/>_9 = Lt(move _10, move _11)<br/></td></tr><tr><td align="left">switchInt(move _9)</td></tr></table>>];
    bb2__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_10)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>_15 = _6<br/>StorageLive(_16)<br/>_16 = _4<br/>_17 = CheckedSub(_15, _16)<br/></td></tr><tr><td align="left">assert(!move (_17.1: bool), &quot;attempt to compute `{} - {}`, which would overflow&quot;, move _15, move _16)</td></tr></table>>];
    bb3__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">_14 = move (_17.0: i32)<br/>StorageDead(_16)<br/>StorageDead(_15)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>_19 = _5<br/>StorageLive(_20)<br/>_20 = _6<br/>_21 = CheckedSub(_19, _20)<br/></td></tr><tr><td align="left">assert(!move (_21.1: bool), &quot;attempt to compute `{} - {}`, which would overflow&quot;, move _19, move _20)</td></tr></table>>];
    bb4__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">_18 = move (_21.0: i32)<br/>StorageDead(_20)<br/>StorageDead(_19)<br/>_13 = Gt(move _14, move _18)<br/></td></tr><tr><td align="left">switchInt(move _13)</td></tr></table>>];
    bb5__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_14)<br/>StorageLive(_22)<br/>_22 = _2<br/>StorageLive(_23)<br/>_23 = _3<br/>_24 = CheckedAdd(_22, _23)<br/></td></tr><tr><td align="left">assert(!move (_24.1: bool), &quot;attempt to compute `{} + {}`, which would overflow&quot;, move _22, move _23)</td></tr></table>>];
    bb6__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">_5 = move (_24.0: i32)<br/>StorageDead(_23)<br/>StorageDead(_22)<br/>StorageLive(_25)<br/>_25 = _2<br/>StorageLive(_26)<br/>_26 = _3<br/>_27 = CheckedSub(_25, _26)<br/></td></tr><tr><td align="left">assert(!move (_27.1: bool), &quot;attempt to compute `{} - {}`, which would overflow&quot;, move _25, move _26)</td></tr></table>>];
    bb7__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">_4 = move (_27.0: i32)<br/>StorageDead(_26)<br/>StorageDead(_25)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb9__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageLive(_28)<br/>_28 = _2<br/>StorageLive(_29)<br/>_29 = _3<br/>_30 = CheckedAdd(_28, _29)<br/></td></tr><tr><td align="left">assert(!move (_30.1: bool), &quot;attempt to compute `{} + {}`, which would overflow&quot;, move _28, move _29)</td></tr></table>>];
    bb10__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">_2 = move (_30.0: i32)<br/>StorageDead(_29)<br/>StorageDead(_28)<br/>StorageLive(_31)<br/>_31 = _4<br/>StorageLive(_32)<br/>_32 = _5<br/>_33 = CheckedAdd(_31, _32)<br/></td></tr><tr><td align="left">assert(!move (_33.1: bool), &quot;attempt to compute `{} + {}`, which would overflow&quot;, move _31, move _32)</td></tr></table>>];
    bb11__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">_3 = move (_33.0: i32)<br/>StorageDead(_32)<br/>StorageDead(_31)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>_36 = _2<br/>StorageLive(_37)<br/>_37 = _3<br/>_35 = Gt(move _36, move _37)<br/></td></tr><tr><td align="left">switchInt(move _35)</td></tr></table>>];
    bb12__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_36)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>_39 = _4<br/>StorageLive(_40)<br/>_40 = _5<br/>_41 = CheckedAdd(_39, _40)<br/></td></tr><tr><td align="left">assert(!move (_41.1: bool), &quot;attempt to compute `{} + {}`, which would overflow&quot;, move _39, move _40)</td></tr></table>>];
    bb13__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">_38 = move (_41.0: i32)<br/>StorageDead(_40)<br/>StorageDead(_39)<br/>_42 = CheckedAdd(_2, _38)<br/></td></tr><tr><td align="left">assert(!move (_42.1: bool), &quot;attempt to compute `{} + {}`, which would overflow&quot;, _2, move _38)</td></tr></table>>];
    bb14__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">_2 = move (_42.0: i32)<br/>StorageDead(_38)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb15__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_36)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>_44 = _4<br/>StorageLive(_45)<br/>_45 = _5<br/>_46 = CheckedAdd(_44, _45)<br/></td></tr><tr><td align="left">assert(!move (_46.1: bool), &quot;attempt to compute `{} + {}`, which would overflow&quot;, move _44, move _45)</td></tr></table>>];
    bb16__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">_43 = move (_46.0: i32)<br/>StorageDead(_45)<br/>StorageDead(_44)<br/>_47 = CheckedSub(_2, _43)<br/></td></tr><tr><td align="left">assert(!move (_47.1: bool), &quot;attempt to compute `{} - {}`, which would overflow&quot;, _2, move _43)</td></tr></table>>];
    bb17__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">_2 = move (_47.0: i32)<br/>StorageDead(_43)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb18__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>_48 = CheckedAdd(_6, const 1_i32)<br/></td></tr><tr><td align="left">assert(!move (_48.1: bool), &quot;attempt to compute `{} + {}`, which would overflow&quot;, _6, const 1_i32)</td></tr></table>>];
    bb19__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">_6 = move (_48.0: i32)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_10)<br/>StorageDead(_9)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>_81 = const _<br/>_56 = &amp;(*_81)<br/>_55 = move _56 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_56)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>_64 = &amp;_2<br/></td></tr><tr><td align="left">_63 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;i32&gt;(move _64)</td></tr></table>>];
    bb21__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>_62 = [move _63]<br/>StorageDead(_63)<br/>_60 = &amp;_62<br/>_59 = move _60 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_60)<br/></td></tr><tr><td align="left">_54 = Arguments::&lt;'_&gt;::new_v1(move _55, move _59)</td></tr></table>>];
    bb22__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>StorageDead(_55)<br/></td></tr><tr><td align="left">_53 = _print(move _54)</td></tr></table>>];
    bb23__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>StorageDead(_62)<br/>StorageDead(_53)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>_80 = const _<br/>_70 = &amp;(*_80)<br/>_69 = move _70 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_70)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>_78 = &amp;_3<br/></td></tr><tr><td align="left">_77 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;i32&gt;(move _78)</td></tr></table>>];
    bb24__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/>_76 = [move _77]<br/>StorageDead(_77)<br/>_74 = &amp;_76<br/>_73 = move _74 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_74)<br/></td></tr><tr><td align="left">_68 = Arguments::&lt;'_&gt;::new_v1(move _69, move _73)</td></tr></table>>];
    bb25__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/>StorageDead(_69)<br/></td></tr><tr><td align="left">_67 = _print(move _68)</td></tr></table>>];
    bb26__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/>StorageDead(_76)<br/>StorageDead(_67)<br/>_0 = const ()<br/>StorageDead(_6)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">drop(_1)</td></tr></table>>];
    bb27__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left">return</td></tr></table>>];
    bb28__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">28 (cleanup)</td></tr><tr><td align="left">drop(_1)</td></tr></table>>];
    bb29__0_3 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">29 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_3 -> bb1__0_3 [label=""];
    bb1__0_3 -> bb20__0_3 [label="0"];
    bb1__0_3 -> bb2__0_3 [label="otherwise"];
    bb2__0_3 -> bb3__0_3 [label="success"];
    bb2__0_3 -> bb28__0_3 [label="unwind"];
    bb3__0_3 -> bb4__0_3 [label="success"];
    bb3__0_3 -> bb28__0_3 [label="unwind"];
    bb4__0_3 -> bb8__0_3 [label="0"];
    bb4__0_3 -> bb5__0_3 [label="otherwise"];
    bb5__0_3 -> bb6__0_3 [label="success"];
    bb5__0_3 -> bb28__0_3 [label="unwind"];
    bb6__0_3 -> bb7__0_3 [label="success"];
    bb6__0_3 -> bb28__0_3 [label="unwind"];
    bb7__0_3 -> bb9__0_3 [label=""];
    bb8__0_3 -> bb9__0_3 [label=""];
    bb9__0_3 -> bb10__0_3 [label="success"];
    bb9__0_3 -> bb28__0_3 [label="unwind"];
    bb10__0_3 -> bb11__0_3 [label="success"];
    bb10__0_3 -> bb28__0_3 [label="unwind"];
    bb11__0_3 -> bb15__0_3 [label="0"];
    bb11__0_3 -> bb12__0_3 [label="otherwise"];
    bb12__0_3 -> bb13__0_3 [label="success"];
    bb12__0_3 -> bb28__0_3 [label="unwind"];
    bb13__0_3 -> bb14__0_3 [label="success"];
    bb13__0_3 -> bb28__0_3 [label="unwind"];
    bb14__0_3 -> bb18__0_3 [label=""];
    bb15__0_3 -> bb16__0_3 [label="success"];
    bb15__0_3 -> bb28__0_3 [label="unwind"];
    bb16__0_3 -> bb17__0_3 [label="success"];
    bb16__0_3 -> bb28__0_3 [label="unwind"];
    bb17__0_3 -> bb18__0_3 [label=""];
    bb18__0_3 -> bb19__0_3 [label="success"];
    bb18__0_3 -> bb28__0_3 [label="unwind"];
    bb19__0_3 -> bb1__0_3 [label=""];
    bb20__0_3 -> bb21__0_3 [label="return"];
    bb20__0_3 -> bb28__0_3 [label="unwind"];
    bb21__0_3 -> bb22__0_3 [label="return"];
    bb21__0_3 -> bb28__0_3 [label="unwind"];
    bb22__0_3 -> bb23__0_3 [label="return"];
    bb22__0_3 -> bb28__0_3 [label="unwind"];
    bb23__0_3 -> bb24__0_3 [label="return"];
    bb23__0_3 -> bb28__0_3 [label="unwind"];
    bb24__0_3 -> bb25__0_3 [label="return"];
    bb24__0_3 -> bb28__0_3 [label="unwind"];
    bb25__0_3 -> bb26__0_3 [label="return"];
    bb25__0_3 -> bb28__0_3 [label="unwind"];
    bb26__0_3 -> bb27__0_3 [label="return"];
    bb26__0_3 -> bb29__0_3 [label="unwind"];
    bb28__0_3 -> bb29__0_3 [label="return"];
}
